#!/usr/bin/env php
<?php
require_once('../vendor/autoload.php');

use League\CLImate\CLImate;
use WebAppMaker\Config;
$climate = new CLImate;
//Args
$climate->arguments->add([
    // 'web-server' => [
    //     'prefix'       => 'ws',
    //     'longPrefix'   => 'web-server',
    //     'description'  => 'Webserver name (apache2 nginx)',
    //     // 'required'    => true
    // ],
    // 'name' => [
    //     'prefix'       => 'n',
    //     'longPrefix'   => 'name',
    //     'description'  => 'Website name',
    //     // 'required'    => true
    // ],
    // 'vhost' => [
    //     'prefix'      => 'h',
    //     'longPrefix'  => 'vhost',
    //     'description' => 'Vhost name',
    //     // 'required'    => true
    // ],
    // 'local-address' => [
    //     'prefix'      => 'a',
    //     'longPrefix'  => 'address',
    //     'description' => 'Local address to create (eg site-name.work)',
    //     // 'required'    => true
    // ],
    'file' => [
        'prefix'      => 'f',
        'longPrefix'  => 'file',
        'description' => 'Use a config file to setup webapp',
        // 'required'    => true
    ],
    'interactive' => [
        'prefix'      => 'i',
        'longPrefix'  => 'interactive',
        'description' => 'Interactive creation',
        // 'required'    => true
    ],
    'verbose' => [
        'prefix'      => 'v',
        'longPrefix'  => 'verbose',
        'description' => 'Verbose output',
        'noValue'     => true,
    ],
    'help' => [
        'prefix'      => 'h',
        'longPrefix'  => 'help',
        'description' => 'Prints a usage statement',
        'noValue'     => true,
    ]
]);
$climate->arguments->parse();

if($climate->arguments->defined('help')) {
    return $climate->usage();
}

$rootDir = __DIR__;
$configDir = __DIR__."/../config";
$configReal = realpath($configDir);

//Check if root
if (posix_getuid() !== 0){
    $climate->bold()->red()->out('This script must be run as root user to create web-server configuration files');
    exit();
}
//say hello
$climate->backgroundLightGreen()->bold()->black()->out('Welcome to web app configuration');
//Check if user would like to use another config folder
$input = $climate->input('Please select your config folder path (default : /config)');
$input->defaultTo($configReal);
$input->accept(function($response) {
    return ($response !== '' && is_dir($response));
});
$configReal = $input->prompt();

$config = new Config($climate);
$configFile = $config->selectConfigFile($configReal); //string
$configValues = $config->readConfigFile($configFile); //array

$climate->backgroundLightGreen()->bold()->black()->out('This is your defined configuration :');
foreach ($configValues as $key => $value) {
    $climate->backgroundLightGreen()->black()->br()->out($key." = > ".$value);
}
$input = $climate->backgroundLightGreen()->bold()->black()->input('Is configuration OK ? [Y/n]');
$input->accept(['Y', 'y', 'n']);
$input->strict();
$response = $input->prompt();

if($response === 'n') {
    exit();
} else {
    $climate->backgroundLightGreen()->bold()->black()->out('Starting to build app config');
    $build = $config->buildApp($configValues); //array
}



function execOrFail($command) {
    try {
        exec($command, $output);
    } catch (Exception $e) {
        return $e->getMessage();
    }
    // return (!empty($output)) ? $output : true;
    return $output;
}
