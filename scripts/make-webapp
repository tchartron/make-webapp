#!/usr/bin/env php
<?php
require_once('../vendor/autoload.php');

use League\CLImate\CLImate;
use WebAppMaker\Configuration\Config;
$climate = new CLImate;
//Args
$climate->arguments->add([
    'config' => [
        'prefix'      => 'c',
        'longPrefix'  => 'config',
        'description' => 'Use a config file to setup webapp',
        'noValue'     => true,
        // 'required'    => true
    ],
    'deploy' => [
        'prefix'      => 'd',
        'longPrefix'  => 'deploy',
        'description' => 'Deploy a web app to a distant host',
        'noValue'     => true,
        // 'required'    => true
    ],
    'verbose' => [
        'prefix'      => 'v',
        'longPrefix'  => 'verbose',
        'description' => 'Verbose output',
        'noValue'     => true,
    ],
    'help' => [
        'prefix'      => 'h',
        'longPrefix'  => 'help',
        'description' => 'Prints a usage statement',
        'noValue'     => true,
    ],
    'other' => [
        'description' => 'Prints a usage statement'
    ],

]);
$climate->arguments->parse();

if($climate->arguments->defined('help')) {
    return $climate->usage();
}
// die(var_dump($climate->arguments->get('other')));
if(!$climate->arguments->defined('config') && !$climate->arguments->defined('deploy')) {
    $climate->bold()->red()->out("Argument not supported see usage");
    return $climate->usage();
}


if($climate->arguments->defined('config')) {
    //////////////////
    //Configuration //
    //////////////////
    $climate->backgroundLightGreen()->bold()->black()->out('App configuration');

    $rootDir = __DIR__;
    $configDir = __DIR__."/../config";
    $configPath = realpath($configDir);

    //Check if root
    if (posix_getuid() !== 0){
        $climate->bold()->red()->out('This script must be run as root user to create web-server configuration files');
        exit();
    }
    //Check if user would like to use another config folder
    $input = $climate->input('Please select your config folder path (default : /config)');
    $input->defaultTo($configPath);
    $input->accept(function($response) {
        return ($response !== '' && is_dir($response));
    });
    $configPath = $input->prompt();

    $config = new Config($climate);
    //Get .conf files in selected path
    $configFile = $config->selectConfigFile($configPath); //string
    //Instantiate array with config file values
    $configValues = $config->readConfigFile($configFile); //array
    //Print config recap to the screen
    $climate->backgroundLightGreen()->bold()->black()->out('This is your defined configuration :');
    foreach ($configValues as $key => $value) {
        $climate->backgroundLightGreen()->black()->br()->out($key." = > ".$value);
    }
    $input = $climate->backgroundLightGreen()->bold()->black()->input('Is configuration OK ? [Y/n]');
    $input->accept(['Y', 'y', 'n']);
    $input->strict();
    $response = $input->prompt();

    if($response === 'n') {
        exit();
    } else {
        $climate->backgroundLightGreen()->bold()->black()->out('Starting to build app config');
        $build = $config->buildAppConfiguration($configValues); //array
    }

} else if($climate->arguments->defined('deploy')) {
    ///////////////
    //Deployment //
    ///////////////
    $climate->backgroundLightGreen()->bold()->black()->out('App deployment');

}
